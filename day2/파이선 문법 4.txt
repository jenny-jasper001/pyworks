*반복문 while문 , for문이 있다
for문 사용법
1.유형1 #in은 연산자
 for 반복변수 in 자료:  #자료 = list 라던가 대괄호
    실행문

2.유형 2
for x in range(시작값, 종료값, 증감값):  #range는 함수
    실행문

# for문을 이용한 반복문
# 1부터 10까지 출력, 합계

i = 0
while i < 10:
    i = i + 1
    print(i, end='') #end붙이면12345678910로 아래로 출력되다가 옆으로 출력된다
print()
print('=' *30)
#한칸 떼고 =가 30개 생긴다

#range(시작값, 종료값, 증감값이다)  증감값이 1인 경우는 생략이 가능
#range(0,11) = range(0,11,1)
for i in range(0, 11, 1): #11에서 1을 뺀것 (0,11)은 0부터 10까지 줄력된다 하나의 약속
    print(i)

#1부터 10까지 홀수 출력
for i in range(1, 11, 2):  
    print(i)

#1부터 10까지 짝수 출력
for i in range(1, 11,):
    if i % 2 == 0:
        print(i)

#구구단
dan = 3 #3단 구구단
for i in range(1, 10):
    print(dan * i)
3
6
9
12
15
18
21
24
27

##구구단

dan = 3 #3단 구구단
for i in range(1, 10):
    print(f'{dan} * {i} = {dan * i}')

3 * 1 = 3
3 * 2 = 6
3 * 3 = 9
3 * 4 = 12
3 * 5 = 15
3 * 6 = 18
3 * 7 = 21
3 * 8 = 24
3 * 9 = 27

#구구단

dan = int(input("단을 입력하세요: "))
for i in range(1, 10):
    print(f'{dan} * {i} = {dan * i}')

# 중첩 for문
for i in range(5): #0,1,2,3,4 0~4까지 5번 돈다
    for j in range(5):
        print('*', end='')
    print() # print()는 줄바꿈이다
  
*****
*****
*****
*****
***** 이 출력된다
 
#전체 구구단(2~9단)
for i in range(2, 10):
    for j in range(1, 10):
        print(f'{i} * {j} = {i*j}')
    print()
 